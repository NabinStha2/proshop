{"ast":null,"code":"import _slicedToArray from\"/home/nabin/Documents/React/ProShop/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import{Button,Form}from\"react-bootstrap\";import{useDispatch,useSelector}from\"react-redux\";import{Link}from\"react-router-dom\";import{getUserDetails,updateUser}from\"../actions/userActions\";import FormContainer from\"../components/FormContainer\";import Loader from\"../components/Loader\";import Message from\"../components/Message\";import{USER_DETAILS_RESET,USER_UPDATE_RESET}from\"../constants/userConstant\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var UserEditScreen=function UserEditScreen(_ref){var history=_ref.history,match=_ref.match;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),email=_useState2[0],setEmail=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),name=_useState4[0],setName=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),isAdmin=_useState6[0],setIsAdmin=_useState6[1];//   const [message, setMessage] = useState(null);\nvar dispatch=useDispatch();var userDetail=useSelector(function(state){return state.userDetail;});var loading=userDetail.loading,user=userDetail.user,error=userDetail.error;var userUpdate=useSelector(function(state){return state.userUpdate;});var loadingUpdate=userUpdate.loading,successUpdate=userUpdate.success,errorUpdate=userUpdate.error;useEffect(function(){if(successUpdate){dispatch({type:USER_UPDATE_RESET});dispatch({type:USER_DETAILS_RESET});history.push(\"/admin/userlist\");}else{if(!user.name||user._id!==match.params.id){dispatch(getUserDetails(match.params.id));}else{setName(user.name);setEmail(user.email);setIsAdmin(user.isAdmin);}}},[history,match.params.id,user,dispatch,successUpdate]);var submitHandler=function submitHandler(e){e.preventDefault();dispatch(updateUser({_id:match.params.id,name:name,email:email,isAdmin:isAdmin}));};return/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsx(Link,{to:\"/admin/userlist\",className:\"btn btn-light my-3\",children:\"Go Back\"}),/*#__PURE__*/_jsxs(FormContainer,{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Edit User\"}),loadingUpdate&&/*#__PURE__*/_jsx(Loader,{}),errorUpdate&&/*#__PURE__*/_jsx(Message,{variant:\"danger\",children:errorUpdate}),loading?/*#__PURE__*/_jsx(Loader,{}):error?/*#__PURE__*/_jsx(Message,{variant:\"danger\",children:error}):/*#__PURE__*/_jsxs(Form,{onSubmit:submitHandler,children:[/*#__PURE__*/_jsxs(Form.Group,{controlId:\"name\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Name\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"name\",placeholder:\"name\",value:name,onChange:function onChange(e){return setName(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"email\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Email Address\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"email\",placeholder:\"Enter email\",value:email,onChange:function onChange(e){return setEmail(e.target.value);}}),/*#__PURE__*/_jsx(Form.Text,{className:\"text-muted\",children:\"We'll never share your email with anyone else.\"})]}),/*#__PURE__*/_jsx(Form.Group,{controlId:\"isadmmin\",children:/*#__PURE__*/_jsx(Form.Check,{type:\"checkbox\",label:\"Is Admin\",checked:isAdmin,onChange:function onChange(e){return setIsAdmin(e.target.checked);}})}),loading?/*#__PURE__*/_jsx(Loader,{}):/*#__PURE__*/_jsx(Button,{variant:\"primary\",type:\"submit\",children:\"Update\"})]})]})]});};export default UserEditScreen;","map":{"version":3,"sources":["/home/nabin/Documents/React/ProShop/frontend/src/screens/UserEditScreen.js"],"names":["React","useEffect","useState","Button","Form","useDispatch","useSelector","Link","getUserDetails","updateUser","FormContainer","Loader","Message","USER_DETAILS_RESET","USER_UPDATE_RESET","UserEditScreen","history","match","email","setEmail","name","setName","isAdmin","setIsAdmin","dispatch","userDetail","state","loading","user","error","userUpdate","loadingUpdate","successUpdate","success","errorUpdate","type","push","_id","params","id","submitHandler","e","preventDefault","target","value","checked"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { getUserDetails, updateUser } from \"../actions/userActions\";\nimport FormContainer from \"../components/FormContainer\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport { USER_DETAILS_RESET, USER_UPDATE_RESET } from \"../constants/userConstant\";\n\nconst UserEditScreen = ({ history, match }) => {\n  const [email, setEmail] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [isAdmin, setIsAdmin] = useState(\"\");\n  //   const [message, setMessage] = useState(null);\n\n  const dispatch = useDispatch();\n\n  const userDetail = useSelector((state) => state.userDetail);\n  const { loading, user, error } = userDetail;\n  const userUpdate = useSelector((state) => state.userUpdate);\n  const {\n    loading: loadingUpdate,\n    success: successUpdate,\n    error: errorUpdate,\n  } = userUpdate;\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({\n        type: USER_UPDATE_RESET,\n      });\n      dispatch({\n        type: USER_DETAILS_RESET,\n      });\n      history.push(\"/admin/userlist\");\n    } else {\n      if (!user.name || user._id !== match.params.id) {\n        dispatch(getUserDetails(match.params.id));\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n        setIsAdmin(user.isAdmin);\n      }\n    }\n  }, [history, match.params.id, user, dispatch, successUpdate]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(updateUser({ _id: match.params.id, name, email, isAdmin }));\n  };\n\n  return (\n    <React.Fragment>\n      <Link to=\"/admin/userlist\" className=\"btn btn-light my-3\">\n        Go Back\n      </Link>\n      <FormContainer>\n        <h1>Edit User</h1>\n        {loadingUpdate && <Loader />}\n        {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\n        {loading ? (\n          <Loader />\n        ) : error ? (\n          <Message variant=\"danger\">{error}</Message>\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId=\"name\">\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type=\"name\"\n                placeholder=\"name\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              />\n            </Form.Group>\n            <Form.Group controlId=\"email\">\n              <Form.Label>Email Address</Form.Label>\n              <Form.Control\n                type=\"email\"\n                placeholder=\"Enter email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              />\n              <Form.Text className=\"text-muted\">\n                We'll never share your email with anyone else.\n              </Form.Text>\n            </Form.Group>\n            <Form.Group controlId=\"isadmmin\">\n              <Form.Check\n                type=\"checkbox\"\n                label=\"Is Admin\"\n                checked={isAdmin}\n                onChange={(e) => setIsAdmin(e.target.checked)}\n              />\n            </Form.Group>\n\n            {loading ? (\n              <Loader />\n            ) : (\n              <Button variant=\"primary\" type=\"submit\">\n                Update\n              </Button>\n            )}\n          </Form>\n        )}\n      </FormContainer>\n    </React.Fragment>\n  );\n};\n\nexport default UserEditScreen;\n"]},"metadata":{},"sourceType":"module"}