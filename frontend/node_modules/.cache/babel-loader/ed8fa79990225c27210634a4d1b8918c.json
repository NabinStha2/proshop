{"ast":null,"code":"var _jsxFileName = \"/home/nabin/Documents/React/ProShop/frontend/src/screens/ProductEditScreen.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { listProductDetail, updateProduct } from \"../actions/productActions\";\nimport FormContainer from \"../components/FormContainer\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport { PRODUCT_DETAIL_RESET, PRODUCT_UPDATE_RESET } from \"../constants/productConstants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProductEditScreen = ({\n  history,\n  match\n}) => {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [price, setPrice] = useState(0);\n  const [image, setImage] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [countInStock, setCountInStock] = useState(0);\n  const [brand, setBrand] = useState(\"\");\n  const [uploading, setUploading] = useState(false);\n  const dispatch = useDispatch();\n  const productDetail = useSelector(state => state.productDetail);\n  const {\n    loading,\n    product,\n    error\n  } = productDetail;\n  const productUpdate = useSelector(state => state.productUpdate);\n  const {\n    loading: loadingUpdate,\n    success: successUpdate,\n    error: errorUpdate\n  } = productUpdate;\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({\n        type: PRODUCT_UPDATE_RESET\n      });\n      dispatch({\n        type: PRODUCT_DETAIL_RESET\n      });\n      history.push(\"/admin/productlist\");\n    } else {\n      if (!product.name || product._id !== match.params.id) {\n        dispatch(listProductDetail(match.params.id));\n      } else {\n        setName(product.name);\n        setPrice(product.price);\n        setBrand(product.brand);\n        setDescription(product.description);\n        setCountInStock(product.countInStock);\n        setImage(product.image);\n        setCategory(product.category);\n      }\n    }\n  }, [history, match.params.id, product, dispatch, successUpdate]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(updateProduct({\n      _id: product._id,\n      name,\n      price,\n      description,\n      image,\n      brand,\n      category,\n      countInStock\n    }));\n  };\n\n  const uploadFileHandler = async e => {\n    const file = e.target.files[0];\n    const formData = new FormData();\n    formData.append(\"image\", file);\n    setUploading(true);\n\n    try {\n      const {\n        data\n      } = await axios.post(\"/api/upload\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      setImage(data);\n      setUploading(false);\n    } catch (error) {\n      console.log(error);\n      setUploading(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/admin/productlist\",\n      className: \"btn btn-light my-3\",\n      children: \"Go Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormContainer, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Edit Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), loadingUpdate && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 27\n      }, this), errorUpdate && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: errorUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 25\n      }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"name\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"name\",\n            placeholder: \"name\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"price\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"number\",\n            placeholder: \"Enter Price\",\n            value: price,\n            onChange: e => setPrice(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"image\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            label: \"Enter image url\",\n            value: image,\n            onChange: e => setImage(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this), \" \", /*#__PURE__*/_jsxDEV(Form.File, {\n            id: \"image-file\",\n            label: \"Choose File\",\n            custom: true,\n            onChange: uploadFileHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 15\n          }, this), uploading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"brand\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Brand\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter brand\",\n            value: brand,\n            onChange: e => setBrand(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"countInStock\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"countInStock\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"number\",\n            placeholder: \"Enter countInStock\",\n            value: countInStock,\n            onChange: e => setCountInStock(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"description\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter description\",\n            value: description,\n            onChange: e => setDescription(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"category\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter category\",\n            value: category,\n            onChange: e => setCategory(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProductEditScreen, \"MBi2avHjofZ6TodaJqWuLDprixE=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = ProductEditScreen;\nexport default ProductEditScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductEditScreen\");","map":{"version":3,"sources":["/home/nabin/Documents/React/ProShop/frontend/src/screens/ProductEditScreen.js"],"names":["axios","React","useEffect","useState","Button","Form","useDispatch","useSelector","Link","listProductDetail","updateProduct","FormContainer","Loader","Message","PRODUCT_DETAIL_RESET","PRODUCT_UPDATE_RESET","ProductEditScreen","history","match","name","setName","price","setPrice","image","setImage","description","setDescription","category","setCategory","countInStock","setCountInStock","brand","setBrand","uploading","setUploading","dispatch","productDetail","state","loading","product","error","productUpdate","loadingUpdate","success","successUpdate","errorUpdate","type","push","_id","params","id","submitHandler","e","preventDefault","uploadFileHandler","file","target","files","formData","FormData","append","data","post","headers","console","log","value"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { listProductDetail, updateProduct } from \"../actions/productActions\";\nimport FormContainer from \"../components/FormContainer\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport {\n  PRODUCT_DETAIL_RESET,\n  PRODUCT_UPDATE_RESET,\n} from \"../constants/productConstants\";\n\nconst ProductEditScreen = ({ history, match }) => {\n  const [name, setName] = useState(\"\");\n  const [price, setPrice] = useState(0);\n  const [image, setImage] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [countInStock, setCountInStock] = useState(0);\n  const [brand, setBrand] = useState(\"\");\n  const [uploading, setUploading] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const productDetail = useSelector((state) => state.productDetail);\n  const { loading, product, error } = productDetail;\n  const productUpdate = useSelector((state) => state.productUpdate);\n  const {\n    loading: loadingUpdate,\n    success: successUpdate,\n    error: errorUpdate,\n  } = productUpdate;\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: PRODUCT_UPDATE_RESET });\n      dispatch({ type: PRODUCT_DETAIL_RESET });\n      history.push(\"/admin/productlist\");\n    } else {\n      if (!product.name || product._id !== match.params.id) {\n        dispatch(listProductDetail(match.params.id));\n      } else {\n        setName(product.name);\n        setPrice(product.price);\n        setBrand(product.brand);\n        setDescription(product.description);\n        setCountInStock(product.countInStock);\n        setImage(product.image);\n        setCategory(product.category);\n      }\n    }\n  }, [history, match.params.id, product, dispatch, successUpdate]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(\n      updateProduct({\n        _id: product._id,\n        name,\n        price,\n        description,\n        image,\n        brand,\n        category,\n        countInStock,\n      })\n    );\n  };\n  const uploadFileHandler = async (e) => {\n    const file = e.target.files[0];\n    const formData = new FormData();\n    formData.append(\"image\", file);\n    setUploading(true);\n\n    try {\n      const { data } = await axios.post(\"/api/upload\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n        },\n      });\n      setImage(data);\n      setUploading(false);\n    } catch (error) {\n      console.log(error);\n      setUploading(false);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <Link to=\"/admin/productlist\" className=\"btn btn-light my-3\">\n        Go Back\n      </Link>\n      <FormContainer>\n        <h1>Edit Product</h1>\n        {loadingUpdate && <Loader />}\n        {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\n        {loading ? (\n          <Loader />\n        ) : error ? (\n          <Message variant=\"danger\">{error}</Message>\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId=\"name\">\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type=\"name\"\n                placeholder=\"name\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"price\">\n              <Form.Label>Price</Form.Label>\n              <Form.Control\n                type=\"number\"\n                placeholder=\"Enter Price\"\n                value={price}\n                onChange={(e) => setPrice(e.target.value)}\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"image\">\n              <Form.Label>Image</Form.Label>\n              <Form.Control\n                type=\"text\"\n                label=\"Enter image url\"\n                value={image}\n                onChange={(e) => setImage(e.target.value)}\n              ></Form.Control>{\" \"}\n              <Form.File\n                id=\"image-file\"\n                label=\"Choose File\"\n                custom\n                onChange={uploadFileHandler}\n              ></Form.File>\n              {uploading && <Loader />}\n            </Form.Group>\n\n            <Form.Group controlId=\"brand\">\n              <Form.Label>Brand</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter brand\"\n                value={brand}\n                onChange={(e) => setBrand(e.target.value)}\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"countInStock\">\n              <Form.Label>countInStock</Form.Label>\n              <Form.Control\n                type=\"number\"\n                placeholder=\"Enter countInStock\"\n                value={countInStock}\n                onChange={(e) => setCountInStock(e.target.value)}\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"description\">\n              <Form.Label>Description</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter description\"\n                value={description}\n                onChange={(e) => setDescription(e.target.value)}\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"category\">\n              <Form.Label>Category</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter category\"\n                value={category}\n                onChange={(e) => setCategory(e.target.value)}\n              />\n            </Form.Group>\n\n            {loading ? (\n              <Loader />\n            ) : (\n              <Button variant=\"primary\" type=\"submit\">\n                Update\n              </Button>\n            )}\n          </Form>\n        )}\n      </FormContainer>\n    </React.Fragment>\n  );\n};\n\nexport default ProductEditScreen;\n"]},"metadata":{},"sourceType":"module"}