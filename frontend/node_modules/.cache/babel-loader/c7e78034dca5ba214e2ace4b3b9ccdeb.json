{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { productCreateReducer, productDeleteReducer, productDetailReducer, productListReducer, productReviewCreateReducer, productUpdateReducer } from \"./reducers/productReducers\";\nimport { cartReducer } from \"./reducers/cartReducers\";\nimport { userDeleteReducer, userDetailReducer, userListReducer, userLoginReducer, userRegisterReducer, userUpdatedReducer, userUpdateProfileReducer } from \"./reducers/userReducers\";\nimport { orderCreateReducer, orderDeliverReducer, orderDetailsReducer, orderListMyReducer, orderListReducer, orderPayReducer } from \"./reducers/orderReducers\";\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetail: productDetailReducer,\n  productDelete: productDeleteReducer,\n  productCreate: productCreateReducer,\n  productUpdate: productUpdateReducer,\n  productReviewCreate: productReviewCreateReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetail: userDetailReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdatedReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderMyList: orderListMyReducer,\n  orderList: orderListReducer,\n  orderDeliver: orderDeliverReducer\n});\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\") ? JSON.parse(localStorage.getItem(\"cartItems\")) : [];\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\") ? JSON.parse(localStorage.getItem(\"userInfo\")) : null;\nconst shippingAddressFromStorage = localStorage.getItem(\"shippingAddress\") ? JSON.parse(localStorage.getItem(\"shippingAddress\")) : {};\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["/home/nabin/Documents/React/ProShop/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productCreateReducer","productDeleteReducer","productDetailReducer","productListReducer","productReviewCreateReducer","productUpdateReducer","cartReducer","userDeleteReducer","userDetailReducer","userListReducer","userLoginReducer","userRegisterReducer","userUpdatedReducer","userUpdateProfileReducer","orderCreateReducer","orderDeliverReducer","orderDetailsReducer","orderListMyReducer","orderListReducer","orderPayReducer","reducer","productList","productDetail","productDelete","productCreate","productUpdate","productReviewCreate","cart","userLogin","userRegister","userDetail","userUpdateProfile","userList","userDelete","userUpdate","orderCreate","orderDetails","orderPay","orderMyList","orderList","orderDeliver","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","shippingAddressFromStorage","initialState","cartItems","shippingAddress","userInfo","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SACEC,oBADF,EAEEC,oBAFF,EAGEC,oBAHF,EAIEC,kBAJF,EAKEC,0BALF,EAMEC,oBANF,QAOO,4BAPP;AAQA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SACEC,iBADF,EAEEC,iBAFF,EAGEC,eAHF,EAIEC,gBAJF,EAKEC,mBALF,EAMEC,kBANF,EAOEC,wBAPF,QAQO,yBARP;AASA,SACEC,kBADF,EAEEC,mBAFF,EAGEC,mBAHF,EAIEC,kBAJF,EAKEC,gBALF,EAMEC,eANF,QAOO,0BAPP;AASA,MAAMC,OAAO,GAAGxB,eAAe,CAAC;AAC9ByB,EAAAA,WAAW,EAAElB,kBADiB;AAE9BmB,EAAAA,aAAa,EAAEpB,oBAFe;AAG9BqB,EAAAA,aAAa,EAAEtB,oBAHe;AAI9BuB,EAAAA,aAAa,EAAExB,oBAJe;AAK9ByB,EAAAA,aAAa,EAAEpB,oBALe;AAM9BqB,EAAAA,mBAAmB,EAAEtB,0BANS;AAO9BuB,EAAAA,IAAI,EAAErB,WAPwB;AAQ9BsB,EAAAA,SAAS,EAAElB,gBARmB;AAS9BmB,EAAAA,YAAY,EAAElB,mBATgB;AAU9BmB,EAAAA,UAAU,EAAEtB,iBAVkB;AAW9BuB,EAAAA,iBAAiB,EAAElB,wBAXW;AAY9BmB,EAAAA,QAAQ,EAAEvB,eAZoB;AAa9BwB,EAAAA,UAAU,EAAE1B,iBAbkB;AAc9B2B,EAAAA,UAAU,EAAEtB,kBAdkB;AAe9BuB,EAAAA,WAAW,EAAErB,kBAfiB;AAgB9BsB,EAAAA,YAAY,EAAEpB,mBAhBgB;AAiB9BqB,EAAAA,QAAQ,EAAElB,eAjBoB;AAkB9BmB,EAAAA,WAAW,EAAErB,kBAlBiB;AAmB9BsB,EAAAA,SAAS,EAAErB,gBAnBmB;AAoB9BsB,EAAAA,YAAY,EAAEzB;AApBgB,CAAD,CAA/B;AAuBA,MAAM0B,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IACzBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADyB,GAEzB,EAFJ;AAIA,MAAMG,mBAAmB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,UAArB,IACxBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADwB,GAExB,IAFJ;AAIA,MAAMI,0BAA0B,GAAGL,YAAY,CAACC,OAAb,CAAqB,iBAArB,IAC/BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CAD+B,GAE/B,EAFJ;AAIA,MAAMK,YAAY,GAAG;AACnBrB,EAAAA,IAAI,EAAE;AACJsB,IAAAA,SAAS,EAAER,oBADP;AAEJS,IAAAA,eAAe,EAAEH;AAFb,GADa;AAKnBnB,EAAAA,SAAS,EAAE;AACTuB,IAAAA,QAAQ,EAAEL;AADD;AALQ,CAArB;AAUA,MAAMM,UAAU,GAAG,CAACtD,KAAD,CAAnB;AAEA,MAAMuD,KAAK,GAAG1D,WAAW,CACvByB,OADuB,EAEvB4B,YAFuB,EAGvBjD,mBAAmB,CAACF,eAAe,CAAC,GAAGuD,UAAJ,CAAhB,CAHI,CAAzB;AAMA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport {\n  productCreateReducer,\n  productDeleteReducer,\n  productDetailReducer,\n  productListReducer,\n  productReviewCreateReducer,\n  productUpdateReducer,\n} from \"./reducers/productReducers\";\nimport { cartReducer } from \"./reducers/cartReducers\";\nimport {\n  userDeleteReducer,\n  userDetailReducer,\n  userListReducer,\n  userLoginReducer,\n  userRegisterReducer,\n  userUpdatedReducer,\n  userUpdateProfileReducer,\n} from \"./reducers/userReducers\";\nimport {\n  orderCreateReducer,\n  orderDeliverReducer,\n  orderDetailsReducer,\n  orderListMyReducer,\n  orderListReducer,\n  orderPayReducer,\n} from \"./reducers/orderReducers\";\n\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetail: productDetailReducer,\n  productDelete: productDeleteReducer,\n  productCreate: productCreateReducer,\n  productUpdate: productUpdateReducer,\n  productReviewCreate: productReviewCreateReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetail: userDetailReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdatedReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderMyList: orderListMyReducer,\n  orderList: orderListReducer,\n  orderDeliver: orderDeliverReducer,\n});\n\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\")\n  ? JSON.parse(localStorage.getItem(\"cartItems\"))\n  : [];\n\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\n  : null;\n\nconst shippingAddressFromStorage = localStorage.getItem(\"shippingAddress\")\n  ? JSON.parse(localStorage.getItem(\"shippingAddress\"))\n  : {};\n\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage,\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage,\n  },\n};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}