{"ast":null,"code":"var _jsxFileName = \"/home/nabin/Documents/React/ProShop/frontend/src/screens/ProductScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Card, Col, Form, Image, ListGroup, ListGroupItem, Row } from \"react-bootstrap\";\nimport Rating from \"../components/Rating\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createProductReview, listProductDetail } from \"../actions/productActions\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport { PRODUCT_CREATE_REVIEW_RESET } from \"../constants/productConstants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProductScreen = props => {\n  _s();\n\n  const [qty, setQty] = useState(1);\n  const [rating, setRating] = useState(0);\n  const [comment, setComment] = useState(\"\");\n  const dispatch = useDispatch();\n  const productDetail = useSelector(state => state.productDetail);\n  const {\n    loading,\n    error,\n    product\n  } = productDetail;\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  const productReviewCreate = useSelector(state => state.productReviewCreate);\n  const {\n    error: errorReview,\n    success: successReview,\n    successMessage\n  } = productReviewCreate;\n  useEffect(() => {\n    if (successReview) {\n      setRating(0);\n      setComment(\"\"); // dispatch({ type: PRODUCT_CREATE_REVIEW_RESET });\n    }\n\n    dispatch(listProductDetail(props.match.params.id));\n  }, [dispatch, props.match, successReview]);\n\n  const addToCartHandler = () => {\n    props.history.push(`/cart/${props.match.params.id}?qty=${qty}`);\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(createProductReview(props.match.params.id, {\n      rating,\n      comment\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      className: \"btn btn-dark my-3\",\n      to: \"/\",\n      children: \"Go Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 5,\n          children: /*#__PURE__*/_jsxDEV(Image, {\n            src: product.image,\n            alt: product.name,\n            fluid: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(ListGroup, {\n            variant: \"flush\",\n            children: [/*#__PURE__*/_jsxDEV(ListGroupItem, {\n              children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: product.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Rating, {\n                value: product.rating,\n                text: `${product.numReviews} reviews`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: [\"Price: $\", product.price]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: [\"Description: \", product.description]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(ListGroup, {\n              variant: \"flush\",\n              children: [/*#__PURE__*/_jsxDEV(ListGroupItem, {\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    children: \"Price:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 100,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    children: /*#__PURE__*/_jsxDEV(\"string\", {\n                      children: [\"$\", product.price]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 102,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 101,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ListGroupItem, {\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    children: \"Status:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 108,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    children: product.countInStock > 0 ? \"In Stock\" : \"Out Of Stock\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 109,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 19\n              }, this), product.countInStock > 0 && /*#__PURE__*/_jsxDEV(ListGroupItem, {\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    children: \"Qty\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 117,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                      size: \"sm\",\n                      as: \"select\",\n                      value: qty,\n                      onChange: e => setQty(e.target.value),\n                      children: [...Array(product.countInStock).keys()].map(x => /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: x + 1,\n                        children: x + 1\n                      }, x + 1, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 127,\n                        columnNumber: 33\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 119,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 118,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(ListGroupItem, {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: addToCartHandler,\n                  className: \"btn-block\",\n                  type: \"button\",\n                  disabled: product.countInStock === 0,\n                  children: \"Add To Cart\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: 6,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Reviews\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 15\n          }, this), product.reviews.length === 0 && /*#__PURE__*/_jsxDEV(Message, {\n            children: \"No Review\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 48\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n            variant: \"flush\",\n            children: [product.reviews.map(review => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: review.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Rating, {\n                value: review.rating\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: review.createdAt.substring(0, 10)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: review.comment\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 19\n            }, this)), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Write a customer review\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 19\n              }, this), errorReview && /*#__PURE__*/_jsxDEV(Message, {\n                variant: \"danger\",\n                children: errorReview\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 21\n              }, this), successReview && /*#__PURE__*/_jsxDEV(Message, {\n                children: successMessage\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 37\n              }, this), userInfo ? /*#__PURE__*/_jsxDEV(Form, {\n                onSubmit: submitHandler,\n                children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                  controlId: \"rating\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Rating\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 175,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    as: \"select\",\n                    value: rating,\n                    onChange: e => setRating(e.target.value),\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"\",\n                      children: \"Select...\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 181,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"1\",\n                      children: \"1 - Poor\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 182,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"2\",\n                      children: \"2 - Fair\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 183,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"3\",\n                      children: \"3 - Good\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 184,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"4\",\n                      children: \"4 - Very Good\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 185,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"5\",\n                      children: \"5 - Excellent\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 186,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 176,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  controlId: \"comment\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Comment\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 190,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    as: \"textarea\",\n                    value: comment,\n                    row: 3,\n                    onChange: e => setComment(e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 191,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 189,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"submit\",\n                  variant: \"primary\",\n                  children: \"Submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(Message, {\n                children: [\"Please \", /*#__PURE__*/_jsxDEV(Link, {\n                  to: \"/login\",\n                  children: \"sing in\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 30\n                }, this), \" to write a review\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProductScreen, \"mZYjbCpe/coop1GVY/8c/ew9y8c=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = ProductScreen;\nexport default ProductScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductScreen\");","map":{"version":3,"sources":["/home/nabin/Documents/React/ProShop/frontend/src/screens/ProductScreen.js"],"names":["React","useState","useEffect","Link","Button","Card","Col","Form","Image","ListGroup","ListGroupItem","Row","Rating","useDispatch","useSelector","createProductReview","listProductDetail","Loader","Message","PRODUCT_CREATE_REVIEW_RESET","ProductScreen","props","qty","setQty","rating","setRating","comment","setComment","dispatch","productDetail","state","loading","error","product","userLogin","userInfo","productReviewCreate","errorReview","success","successReview","successMessage","match","params","id","addToCartHandler","history","push","submitHandler","e","preventDefault","image","name","numReviews","price","description","countInStock","target","value","Array","keys","map","x","reviews","length","review","createdAt","substring"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Button,\n  Card,\n  Col,\n  Form,\n  Image,\n  ListGroup,\n  ListGroupItem,\n  Row,\n} from \"react-bootstrap\";\nimport Rating from \"../components/Rating\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  createProductReview,\n  listProductDetail,\n} from \"../actions/productActions\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport { PRODUCT_CREATE_REVIEW_RESET } from \"../constants/productConstants\";\n\nconst ProductScreen = (props) => {\n  const [qty, setQty] = useState(1);\n  const [rating, setRating] = useState(0);\n  const [comment, setComment] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const productDetail = useSelector((state) => state.productDetail);\n  const { loading, error, product } = productDetail;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const productReviewCreate = useSelector((state) => state.productReviewCreate);\n  const {\n    error: errorReview,\n    success: successReview,\n    successMessage,\n  } = productReviewCreate;\n\n  useEffect(() => {\n    if (successReview) {\n      setRating(0);\n      setComment(\"\");\n      // dispatch({ type: PRODUCT_CREATE_REVIEW_RESET });\n    }\n    dispatch(listProductDetail(props.match.params.id));\n  }, [dispatch, props.match, successReview]);\n\n  const addToCartHandler = () => {\n    props.history.push(`/cart/${props.match.params.id}?qty=${qty}`);\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(createProductReview(props.match.params.id, { rating, comment }));\n  };\n\n  return (\n    <React.Fragment>\n      <Link className=\"btn btn-dark my-3\" to=\"/\">\n        Go Back\n      </Link>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <h3>\n          <Message variant=\"danger\">{error}</Message>\n        </h3>\n      ) : (\n        <React.Fragment>\n          <Row>\n            <Col md={5}>\n              <Image src={product.image} alt={product.name} fluid />\n            </Col>\n            <Col md={3}>\n              <ListGroup variant=\"flush\">\n                <ListGroupItem>\n                  <h2>{product.name}</h2>\n                </ListGroupItem>\n                <ListGroup.Item>\n                  <Rating\n                    value={product.rating}\n                    text={`${product.numReviews} reviews`}\n                  />\n                </ListGroup.Item>\n                <ListGroup.Item>Price: ${product.price}</ListGroup.Item>\n                <ListGroup.Item>\n                  Description: {product.description}\n                </ListGroup.Item>\n              </ListGroup>\n            </Col>\n            <Col md={4}>\n              <Card>\n                <ListGroup variant=\"flush\">\n                  <ListGroupItem>\n                    <Row>\n                      <Col>Price:</Col>\n                      <Col>\n                        <string>${product.price}</string>\n                      </Col>\n                    </Row>\n                  </ListGroupItem>\n                  <ListGroupItem>\n                    <Row>\n                      <Col>Status:</Col>\n                      <Col>\n                        {product.countInStock > 0 ? \"In Stock\" : \"Out Of Stock\"}\n                      </Col>\n                    </Row>\n                  </ListGroupItem>\n                  {product.countInStock > 0 && (\n                    <ListGroupItem>\n                      <Row>\n                        <Col>Qty</Col>\n                        <Col>\n                          <Form.Control\n                            size=\"sm\"\n                            as=\"select\"\n                            value={qty}\n                            onChange={(e) => setQty(e.target.value)}\n                          >\n                            {[...Array(product.countInStock).keys()].map(\n                              (x) => (\n                                <option key={x + 1} value={x + 1}>\n                                  {x + 1}\n                                </option>\n                              )\n                            )}\n                          </Form.Control>\n                        </Col>\n                      </Row>\n                    </ListGroupItem>\n                  )}\n\n                  <ListGroupItem>\n                    <Button\n                      onClick={addToCartHandler}\n                      className=\"btn-block\"\n                      type=\"button\"\n                      disabled={product.countInStock === 0}\n                    >\n                      Add To Cart\n                    </Button>\n                  </ListGroupItem>\n                </ListGroup>\n              </Card>\n            </Col>\n          </Row>\n          <Row>\n            <Col md={6}>\n              <h2>Reviews</h2>\n\n              {product.reviews.length === 0 && <Message>No Review</Message>}\n              <ListGroup variant=\"flush\">\n                {product.reviews.map((review) => (\n                  <ListGroup.Item>\n                    <strong>{review.name}</strong>\n                    <Rating value={review.rating} />\n                    <p>{review.createdAt.substring(0, 10)}</p>\n                    <p>{review.comment}</p>\n                  </ListGroup.Item>\n                ))}\n                <ListGroup.Item>\n                  <h2>Write a customer review</h2>\n                  {errorReview && (\n                    <Message variant=\"danger\">{errorReview}</Message>\n                  )}\n                  {successReview && <Message>{successMessage}</Message>}\n                  {userInfo ? (\n                    <Form onSubmit={submitHandler}>\n                      <Form.Group controlId=\"rating\">\n                        <Form.Label>Rating</Form.Label>\n                        <Form.Control\n                          as=\"select\"\n                          value={rating}\n                          onChange={(e) => setRating(e.target.value)}\n                        >\n                          <option value=\"\">Select...</option>\n                          <option value=\"1\">1 - Poor</option>\n                          <option value=\"2\">2 - Fair</option>\n                          <option value=\"3\">3 - Good</option>\n                          <option value=\"4\">4 - Very Good</option>\n                          <option value=\"5\">5 - Excellent</option>\n                        </Form.Control>\n                      </Form.Group>\n                      <Form.Group controlId=\"comment\">\n                        <Form.Label>Comment</Form.Label>\n                        <Form.Control\n                          as=\"textarea\"\n                          value={comment}\n                          row={3}\n                          onChange={(e) => setComment(e.target.value)}\n                        ></Form.Control>\n                      </Form.Group>\n                      <Button type=\"submit\" variant=\"primary\">\n                        Submit\n                      </Button>\n                    </Form>\n                  ) : (\n                    <Message>\n                      Please <Link to=\"/login\">sing in</Link> to write a review\n                    </Message>\n                  )}\n                </ListGroup.Item>\n              </ListGroup>\n            </Col>\n          </Row>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default ProductScreen;\n"]},"metadata":{},"sourceType":"module"}