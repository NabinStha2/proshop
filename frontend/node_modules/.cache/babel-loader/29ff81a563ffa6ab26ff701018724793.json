{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { productDetailReducer, productListReducer } from \"./reducers/productReducers\";\nimport { cartReducer } from \"./reducers/cartReducers\";\nimport { userDeleteReducer, userDetailReducer, userListReducer, userLoginReducer, userRegisterReducer, userUpdateProfileReducer } from \"./reducers/userReducers\";\nimport { orderCreateReducer, orderDetailsReducer, orderListMyReducer, orderPayReducer } from \"./reducers/orderReducers\";\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetail: productDetailReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetail: userDetailReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderMyList: orderListMyReducer\n});\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\") ? JSON.parse(localStorage.getItem(\"cartItems\")) : [];\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\") ? JSON.parse(localStorage.getItem(\"userInfo\")) : null;\nconst shippingAddressFromStorage = localStorage.getItem(\"shippingAddress\") ? JSON.parse(localStorage.getItem(\"shippingAddress\")) : {};\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["/home/nabin/Documents/React/ProShop/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productDetailReducer","productListReducer","cartReducer","userDeleteReducer","userDetailReducer","userListReducer","userLoginReducer","userRegisterReducer","userUpdateProfileReducer","orderCreateReducer","orderDetailsReducer","orderListMyReducer","orderPayReducer","reducer","productList","productDetail","cart","userLogin","userRegister","userDetail","userUpdateProfile","userList","userDelete","orderCreate","orderDetails","orderPay","orderMyList","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","shippingAddressFromStorage","initialState","cartItems","shippingAddress","userInfo","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SACEC,oBADF,EAEEC,kBAFF,QAGO,4BAHP;AAIA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SACEC,iBADF,EAEEC,iBAFF,EAGEC,eAHF,EAIEC,gBAJF,EAKEC,mBALF,EAMEC,wBANF,QAOO,yBAPP;AAQA,SACEC,kBADF,EAEEC,mBAFF,EAGEC,kBAHF,EAIEC,eAJF,QAKO,0BALP;AAOA,MAAMC,OAAO,GAAGjB,eAAe,CAAC;AAC9BkB,EAAAA,WAAW,EAAEb,kBADiB;AAE9Bc,EAAAA,aAAa,EAAEf,oBAFe;AAG9BgB,EAAAA,IAAI,EAAEd,WAHwB;AAI9Be,EAAAA,SAAS,EAAEX,gBAJmB;AAK9BY,EAAAA,YAAY,EAAEX,mBALgB;AAM9BY,EAAAA,UAAU,EAAEf,iBANkB;AAO9BgB,EAAAA,iBAAiB,EAAEZ,wBAPW;AAQ9Ba,EAAAA,QAAQ,EAAEhB,eARoB;AAS9BiB,EAAAA,UAAU,EAAEnB,iBATkB;AAU9BoB,EAAAA,WAAW,EAAEd,kBAViB;AAW9Be,EAAAA,YAAY,EAAEd,mBAXgB;AAY9Be,EAAAA,QAAQ,EAAEb,eAZoB;AAa9Bc,EAAAA,WAAW,EAAEf;AAbiB,CAAD,CAA/B;AAgBA,MAAMgB,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IACzBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADyB,GAEzB,EAFJ;AAIA,MAAMG,mBAAmB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,UAArB,IACxBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADwB,GAExB,IAFJ;AAIA,MAAMI,0BAA0B,GAAGL,YAAY,CAACC,OAAb,CAAqB,iBAArB,IAC/BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CAD+B,GAE/B,EAFJ;AAIA,MAAMK,YAAY,GAAG;AACnBlB,EAAAA,IAAI,EAAE;AACJmB,IAAAA,SAAS,EAAER,oBADP;AAEJS,IAAAA,eAAe,EAAEH;AAFb,GADa;AAKnBhB,EAAAA,SAAS,EAAE;AACToB,IAAAA,QAAQ,EAAEL;AADD;AALQ,CAArB;AAUA,MAAMM,UAAU,GAAG,CAACxC,KAAD,CAAnB;AAEA,MAAMyC,KAAK,GAAG5C,WAAW,CACvBkB,OADuB,EAEvBqB,YAFuB,EAGvBnC,mBAAmB,CAACF,eAAe,CAAC,GAAGyC,UAAJ,CAAhB,CAHI,CAAzB;AAMA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport {\n  productDetailReducer,\n  productListReducer,\n} from \"./reducers/productReducers\";\nimport { cartReducer } from \"./reducers/cartReducers\";\nimport {\n  userDeleteReducer,\n  userDetailReducer,\n  userListReducer,\n  userLoginReducer,\n  userRegisterReducer,\n  userUpdateProfileReducer,\n} from \"./reducers/userReducers\";\nimport {\n  orderCreateReducer,\n  orderDetailsReducer,\n  orderListMyReducer,\n  orderPayReducer,\n} from \"./reducers/orderReducers\";\n\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetail: productDetailReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetail: userDetailReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderMyList: orderListMyReducer,\n});\n\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\")\n  ? JSON.parse(localStorage.getItem(\"cartItems\"))\n  : [];\n\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\n  : null;\n\nconst shippingAddressFromStorage = localStorage.getItem(\"shippingAddress\")\n  ? JSON.parse(localStorage.getItem(\"shippingAddress\"))\n  : {};\n\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage,\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage,\n  },\n};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}