{"ast":null,"code":"import { USER_DELETE_FAILED, USER_DELETE_REQUEST, USER_DELETE_SUCCESS, USER_DETAILS_FAILED, USER_DETAILS_REQUEST, USER_DETAILS_RESET, USER_DETAILS_SUCCESS, USER_LIST_FAILED, USER_LIST_REQUEST, USER_LIST_RESET, USER_LIST_SUCCESS, USER_LOGIN_FAILED, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_FAILED, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_UPDATE_FAILED, USER_UPDATE_PROFILE_FAILED, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_UPDATE_REQUEST, USER_UPDATE_SUCCESS } from \"../constants/userConstant\";\nimport axios from \"axios\";\nimport { ORDER_DETAILS_RESET, ORDER_LIST_MY_RESET } from \"../constants/orderConstant\";\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const {\n      data\n    } = await axios.post(\"/api/users/login\", {\n      email,\n      password\n    }, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAILED,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const logout = () => async dispatch => {\n  dispatch({\n    type: USER_LOGOUT\n  });\n  dispatch({\n    type: USER_DETAILS_RESET\n  });\n  dispatch({\n    type: ORDER_LIST_MY_RESET\n  });\n  dispatch({\n    type: USER_LIST_RESET\n  });\n  dispatch({\n    type: ORDER_DETAILS_RESET\n  });\n  localStorage.removeItem(\"userInfo\");\n};\nexport const register = (name, email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const {\n      data\n    } = await axios.post(\"/api/users/register\", {\n      name,\n      email,\n      password\n    }, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAILED,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const getUserDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const {\n      data\n    } = await axios.get(`/api/users/${id}`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAILED,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const updateUserProfile = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const {\n      data\n    } = await axios.put(`/api/users/profile`, user, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data\n    }); //-----------------------\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    }); //-----------------------\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAILED,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const listUsers = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_LIST_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const {\n      data\n    } = await axios.get(`/api/users`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: USER_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_LIST_FAILED,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const deleteUser = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DELETE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    await axios.delete(`/api/users/${id}`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: USER_DELETE_SUCCESS\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DELETE_FAILED,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const updateUser = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const {\n      data\n    } = await axios.patch(`/api/users/${user._id}`, user, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: USER_UPDATE_SUCCESS\n    });\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_FAILED,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["/home/nabin/Documents/React/ProShop/frontend/src/actions/userActions.js"],"names":["USER_DELETE_FAILED","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DETAILS_FAILED","USER_DETAILS_REQUEST","USER_DETAILS_RESET","USER_DETAILS_SUCCESS","USER_LIST_FAILED","USER_LIST_REQUEST","USER_LIST_RESET","USER_LIST_SUCCESS","USER_LOGIN_FAILED","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGOUT","USER_REGISTER_FAILED","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_UPDATE_FAILED","USER_UPDATE_PROFILE_FAILED","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","axios","ORDER_DETAILS_RESET","ORDER_LIST_MY_RESET","login","email","password","dispatch","type","data","post","headers","payload","localStorage","setItem","JSON","stringify","error","response","message","logout","removeItem","register","name","getUserDetails","id","getState","userLogin","userInfo","get","Authorization","token","updateUserProfile","user","put","listUsers","deleteUser","delete","updateUser","patch","_id"],"mappings":"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","sourcesContent":["import {\n  USER_DELETE_FAILED,\n  USER_DELETE_REQUEST,\n  USER_DELETE_SUCCESS,\n  USER_DETAILS_FAILED,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_RESET,\n  USER_DETAILS_SUCCESS,\n  USER_LIST_FAILED,\n  USER_LIST_REQUEST,\n  USER_LIST_RESET,\n  USER_LIST_SUCCESS,\n  USER_LOGIN_FAILED,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGOUT,\n  USER_REGISTER_FAILED,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_UPDATE_FAILED,\n  USER_UPDATE_PROFILE_FAILED,\n  USER_UPDATE_PROFILE_REQUEST,\n  USER_UPDATE_PROFILE_SUCCESS,\n  USER_UPDATE_REQUEST,\n  USER_UPDATE_SUCCESS,\n} from \"../constants/userConstant\";\nimport axios from \"axios\";\nimport {\n  ORDER_DETAILS_RESET,\n  ORDER_LIST_MY_RESET,\n} from \"../constants/orderConstant\";\n\nexport const login = (email, password) => async (dispatch) => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST,\n    });\n\n    const { data } = await axios.post(\n      \"/api/users/login\",\n      { email, password },\n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    );\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAILED,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const logout = () => async (dispatch) => {\n  dispatch({\n    type: USER_LOGOUT,\n  });\n  dispatch({\n    type: USER_DETAILS_RESET,\n  });\n  dispatch({\n    type: ORDER_LIST_MY_RESET,\n  });\n  dispatch({\n    type: USER_LIST_RESET,\n  });\n  dispatch({\n    type: ORDER_DETAILS_RESET,\n  });\n  localStorage.removeItem(\"userInfo\");\n};\n\nexport const register = (name, email, password) => async (dispatch) => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST,\n    });\n\n    const { data } = await axios.post(\n      \"/api/users/register\",\n      { name, email, password },\n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    );\n\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data,\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    });\n\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAILED,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const { data } = await axios.get(`/api/users/${id}`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    });\n\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAILED,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const { data } = await axios.put(`/api/users/profile`, user, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    });\n\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data,\n    });\n    //-----------------------\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    });\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data,\n    });\n    //-----------------------\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAILED,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const listUsers = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_LIST_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const { data } = await axios.get(`/api/users`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    });\n\n    dispatch({\n      type: USER_LIST_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_LIST_FAILED,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const deleteUser = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DELETE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    await axios.delete(`/api/users/${id}`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    });\n\n    dispatch({\n      type: USER_DELETE_SUCCESS,\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DELETE_FAILED,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const updateUser = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const { data } = await axios.patch(`/api/users/${user._id}`, user, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    });\n\n    dispatch({\n      type: USER_UPDATE_SUCCESS,\n    });\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_FAILED,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}