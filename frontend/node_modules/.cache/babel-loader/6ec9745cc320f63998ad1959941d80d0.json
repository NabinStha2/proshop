{"ast":null,"code":"import _slicedToArray from\"/home/nabin/Documents/React/ProShop/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{Button,Form}from\"react-bootstrap\";import FormContainer from\"../components/FormContainer\";import{useDispatch,useSelector}from\"react-redux\";import{saveShippingAddress}from\"../actions/cartActions\";import CheckoutStep from\"../components/CheckoutStep\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ShippingScreen=function ShippingScreen(_ref){var history=_ref.history;var cart=useSelector(function(state){return state.cart;});var shippingAddress=cart.shippingAddress;var dispatch=useDispatch();var _useState=useState(shippingAddress.address),_useState2=_slicedToArray(_useState,2),address=_useState2[0],setAddress=_useState2[1];var _useState3=useState(shippingAddress.city),_useState4=_slicedToArray(_useState3,2),city=_useState4[0],setCity=_useState4[1];var _useState5=useState(shippingAddress.postalCode),_useState6=_slicedToArray(_useState5,2),postalCode=_useState6[0],setPostalCode=_useState6[1];var _useState7=useState(shippingAddress.country),_useState8=_slicedToArray(_useState7,2),country=_useState8[0],setCountry=_useState8[1];var submitHandler=function submitHandler(e){e.preventDefault();dispatch(saveShippingAddress({address:address,city:city,postalCode:postalCode,country:country}));history.push(\"/payment\");};return/*#__PURE__*/_jsxs(FormContainer,{children:[/*#__PURE__*/_jsx(CheckoutStep,{step1:true,step2:true}),/*#__PURE__*/_jsx(\"h1\",{children:\"Shipping\"}),/*#__PURE__*/_jsxs(Form,{onSubmit:submitHandler,children:[/*#__PURE__*/_jsxs(Form.Group,{controlId:\"name\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Address\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"address\",placeholder:\"address\",value:address,required:true,onChange:function onChange(e){return setAddress(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"city\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"City\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"city\",placeholder:\"city\",value:city,required:true,onChange:function onChange(e){return setCity(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"postalCode\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"postalCode\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"postalCode\",placeholder:\"postalCode\",value:postalCode,required:true,onChange:function onChange(e){return setPostalCode(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"country\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"country\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"country\",placeholder:\"country\",value:country,required:true,onChange:function onChange(e){return setCountry(e.target.value);}})]}),/*#__PURE__*/_jsx(Button,{type:\"submit\",variant:\"primary\",children:\"Continue\"})]})]});};export default ShippingScreen;","map":{"version":3,"sources":["/home/nabin/Documents/React/ProShop/frontend/src/screens/ShippingScreen.js"],"names":["React","useState","Button","Form","FormContainer","useDispatch","useSelector","saveShippingAddress","CheckoutStep","ShippingScreen","history","cart","state","shippingAddress","dispatch","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","submitHandler","e","preventDefault","push","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport FormContainer from \"../components/FormContainer\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { saveShippingAddress } from \"../actions/cartActions\";\nimport CheckoutStep from \"../components/CheckoutStep\";\n\nconst ShippingScreen = ({ history }) => {\n  const cart = useSelector((state) => state.cart);\n  const { shippingAddress } = cart;\n\n  const dispatch = useDispatch();\n\n  const [address, setAddress] = useState(shippingAddress.address);\n  const [city, setCity] = useState(shippingAddress.city);\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\n  const [country, setCountry] = useState(shippingAddress.country);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(saveShippingAddress({ address, city, postalCode, country }));\n    history.push(\"/payment\");\n  };\n\n  return (\n    <FormContainer>\n      <CheckoutStep step1 step2 />\n      <h1>Shipping</h1>\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId=\"name\">\n          <Form.Label>Address</Form.Label>\n          <Form.Control\n            type=\"address\"\n            placeholder=\"address\"\n            value={address}\n            required\n            onChange={(e) => setAddress(e.target.value)}\n          />\n        </Form.Group>\n        <Form.Group controlId=\"city\">\n          <Form.Label>City</Form.Label>\n          <Form.Control\n            type=\"city\"\n            placeholder=\"city\"\n            value={city}\n            required\n            onChange={(e) => setCity(e.target.value)}\n          />\n        </Form.Group>\n        <Form.Group controlId=\"postalCode\">\n          <Form.Label>postalCode</Form.Label>\n          <Form.Control\n            type=\"postalCode\"\n            placeholder=\"postalCode\"\n            value={postalCode}\n            required\n            onChange={(e) => setPostalCode(e.target.value)}\n          />\n        </Form.Group>\n        <Form.Group controlId=\"country\">\n          <Form.Label>country</Form.Label>\n          <Form.Control\n            type=\"country\"\n            placeholder=\"country\"\n            value={country}\n            required\n            onChange={(e) => setCountry(e.target.value)}\n          />\n        </Form.Group>\n\n        <Button type=\"submit\" variant=\"primary\">\n          Continue\n        </Button>\n      </Form>\n    </FormContainer>\n  );\n};\n\nexport default ShippingScreen;\n"]},"metadata":{},"sourceType":"module"}