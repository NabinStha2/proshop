{"ast":null,"code":"import axios from \"axios\";\nimport { ORDER_CREATE_FAILED, ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_DETAILS_FAILED, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_PAY_FAILED, ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS } from \"../constants/orderConstant\";\nexport const createOrder = order => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const {\n      data\n    } = await axios.post(`/api/orders`, order, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAILED,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const getOrderDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const {\n      data\n    } = await axios.get(`/api/orders/${id}`, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DETAILS_FAILED,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const payOrder = (order, paymentResult) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_PAY_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const {\n      data\n    } = await axios.get(`/api/orders/${id}/pay`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_PAY_FAILED,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["/home/nabin/Documents/React/ProShop/frontend/src/actions/orderActions.js"],"names":["axios","ORDER_CREATE_FAILED","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_DETAILS_FAILED","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_PAY_FAILED","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","createOrder","order","dispatch","getState","type","userLogin","userInfo","data","post","headers","Authorization","token","payload","error","response","message","getOrderDetails","id","get","payOrder","paymentResult"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport {\n  ORDER_CREATE_FAILED,\n  ORDER_CREATE_REQUEST,\n  ORDER_CREATE_SUCCESS,\n  ORDER_DETAILS_FAILED,\n  ORDER_DETAILS_REQUEST,\n  ORDER_DETAILS_SUCCESS,\n  ORDER_PAY_FAILED,\n  ORDER_PAY_REQUEST,\n  ORDER_PAY_SUCCESS,\n} from \"../constants/orderConstant\";\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const { data } = await axios.post(`/api/orders`, order, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    });\n\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAILED,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const { data } = await axios.get(`/api/orders/${id}`, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    });\n\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DETAILS_FAILED,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const payOrder = (order, paymentResult) => async (\n  dispatch,\n  getState\n) => {\n  try {\n    dispatch({\n      type: ORDER_PAY_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const { data } = await axios.get(`/api/orders/${id}/pay`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    });\n\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_PAY_FAILED,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}