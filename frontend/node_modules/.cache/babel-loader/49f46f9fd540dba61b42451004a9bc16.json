{"ast":null,"code":"var _jsxFileName = \"/home/nabin/Documents/React/ProShop/frontend/src/screens/OrderScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Row, ListGroup, Image, Card, Col } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { getOrderDetails, payOrder } from \"../actions/orderActions\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport axios from \"axios\";\nimport { PayPalButton } from \"react-paypal-button-v2\";\nimport { ORDER_PAY_RESET } from \"../constants/orderConstant\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst OrderScreen = ({\n  match\n}) => {\n  _s();\n\n  const [sdkReady, setSdkReady] = useState(false);\n  const orderDetails = useSelector(state => state.orderDetails);\n  const {\n    order,\n    loading,\n    error\n  } = orderDetails;\n  const orderPay = useSelector(state => state.orderPay);\n  const {\n    loading: loadingPay,\n    success: successPay\n  } = orderPay; //rename\n\n  if (!loading) {\n    //calculate prices\n    const addDecimals = num => {\n      return (Math.round(num * 100) / 100).toFixed(2);\n    };\n\n    order.itemsPrice = addDecimals(order.orderItems.reduce((acc, currentItem) => acc + currentItem.qty * currentItem.price, 0));\n  }\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const addPayPalScript = async () => {\n      const {\n        data: clientId\n      } = await axios.get(\"/api/config/paypal\");\n      console.log(clientId);\n      const script = document.createElement(\"script\");\n      script.type = \"text/javascript\";\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\n      script.async = true;\n\n      script.onload = () => {\n        setSdkReady(true);\n      };\n\n      document.body.appendChild(script);\n    };\n\n    if (!order || successPay) {\n      dispatch({\n        type: ORDER_PAY_RESET\n      });\n      dispatch(getOrderDetails(match.params.id));\n    } else if (!order.isPaid) {\n      if (!window.paypal) {\n        addPayPalScript();\n      } else {\n        setSdkReady(true);\n      }\n    }\n  }, [dispatch, match, successPay, order]);\n\n  const successPaymentHandler = paymentResult => {\n    console.log(paymentResult);\n    dispatch(payOrder(match.params.id, paymentResult));\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Order \", order._id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 8,\n          children: /*#__PURE__*/_jsxDEV(ListGroup, {\n            variant: \"flush\",\n            children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Shipping\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Name: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 21\n                }, this), order.user.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Email: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: `mailto:${order.user.email}`,\n                  children: order.user.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Address:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 21\n                }, this), order.shippingAddress.address, \",\", order.shippingAddress.city, \",\", order.shippingAddress.postalCode, \",\", order.shippingAddress.country]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 19\n              }, this), order.isDelivered ? /*#__PURE__*/_jsxDEV(Message, {\n                variant: \"success\",\n                children: [\"Delivered on \", order.DeliveredAt]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(Message, {\n                variant: \"danger\",\n                children: \"Not Delivered\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Payment Method\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Method: \", order.paymentMethod]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 19\n              }, this), order.isPaid ? /*#__PURE__*/_jsxDEV(Message, {\n                variant: \"success\",\n                children: [\"Paid on \", order.paidAt]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(Message, {\n                variant: \"danger\",\n                children: \"Not Paid\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Order Items\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 19\n              }, this), order.orderItems.length === 0 ? /*#__PURE__*/_jsxDEV(Message, {\n                children: \"Order is empty\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 21\n              }, this) : order.orderItems.map((item, index) => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    sm: 2,\n                    children: /*#__PURE__*/_jsxDEV(Image, {\n                      src: item.image,\n                      alt: item.name,\n                      fluid: true,\n                      rounded: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 127,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 126,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    children: /*#__PURE__*/_jsxDEV(Link, {\n                      to: `/product/${item.product}`,\n                      children: item.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 135,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 134,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    sm: 4,\n                    children: [item.qty, \"x$\", item.price, \" = $\", item.qty * item.price]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 139,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 25\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 23\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(ListGroup, {\n              variant: \"flush\",\n              children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: \"Order Summary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    children: \"Items\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 157,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    children: [\"$\", order.itemsPrice]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 158,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    children: \"Shipping\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 163,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    children: [\"$\", order.shippingPrice]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 164,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    children: \"Tax\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 169,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    children: [\"$\", order.taxPrice]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 170,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    children: \"Total\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 175,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    children: [\"$\", order.totalPrice]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 176,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                children: !order.isPaid && /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                  children: [loadingPay && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 182,\n                    columnNumber: 40\n                  }, this), !sdkReady ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 184,\n                    columnNumber: 27\n                  }, this) : /*#__PURE__*/_jsxDEV(PayPalButton, {\n                    amount: order.totalPrice,\n                    onSuccess: successPaymentHandler\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 186,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 181,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n_s(OrderScreen, \"Qv4ZeYPkh4Hem7UMdpkFU9V5TLU=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = OrderScreen;\nexport default OrderScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderScreen\");","map":{"version":3,"sources":["/home/nabin/Documents/React/ProShop/frontend/src/screens/OrderScreen.js"],"names":["React","useEffect","useState","Row","ListGroup","Image","Card","Col","useDispatch","useSelector","Link","getOrderDetails","payOrder","Message","Loader","axios","PayPalButton","ORDER_PAY_RESET","OrderScreen","match","sdkReady","setSdkReady","orderDetails","state","order","loading","error","orderPay","loadingPay","success","successPay","addDecimals","num","Math","round","toFixed","itemsPrice","orderItems","reduce","acc","currentItem","qty","price","dispatch","addPayPalScript","data","clientId","get","console","log","script","document","createElement","type","src","async","onload","body","appendChild","params","id","isPaid","window","paypal","successPaymentHandler","paymentResult","_id","user","name","email","shippingAddress","address","city","postalCode","country","isDelivered","DeliveredAt","paymentMethod","paidAt","length","map","item","index","image","product","shippingPrice","taxPrice","totalPrice"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Row, ListGroup, Image, Card, Col } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { getOrderDetails, payOrder } from \"../actions/orderActions\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport axios from \"axios\";\nimport { PayPalButton } from \"react-paypal-button-v2\";\nimport { ORDER_PAY_RESET } from \"../constants/orderConstant\";\n\nconst OrderScreen = ({ match }) => {\n  const [sdkReady, setSdkReady] = useState(false);\n\n  const orderDetails = useSelector((state) => state.orderDetails);\n  const { order, loading, error } = orderDetails;\n  const orderPay = useSelector((state) => state.orderPay);\n  const { loading: loadingPay, success: successPay } = orderPay; //rename\n\n  if (!loading) {\n    //calculate prices\n    const addDecimals = (num) => {\n      return (Math.round(num * 100) / 100).toFixed(2);\n    };\n\n    order.itemsPrice = addDecimals(\n      order.orderItems.reduce(\n        (acc, currentItem) => acc + currentItem.qty * currentItem.price,\n        0\n      )\n    );\n  }\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const addPayPalScript = async () => {\n      const { data: clientId } = await axios.get(\"/api/config/paypal\");\n      console.log(clientId);\n      const script = document.createElement(\"script\");\n      script.type = \"text/javascript\";\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\n      script.async = true;\n      script.onload = () => {\n        setSdkReady(true);\n      };\n      document.body.appendChild(script);\n    };\n\n    if (!order || successPay) {\n      dispatch({ type: ORDER_PAY_RESET });\n      dispatch(getOrderDetails(match.params.id));\n    } else if (!order.isPaid) {\n      if (!window.paypal) {\n        addPayPalScript();\n      } else {\n        setSdkReady(true);\n      }\n    }\n  }, [dispatch, match, successPay, order]);\n\n  const successPaymentHandler = (paymentResult) => {\n    console.log(paymentResult);\n    dispatch(payOrder(match.params.id, paymentResult));\n  };\n\n  return (\n    <React.Fragment>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <React.Fragment>\n          <h1>Order {order._id}</h1>\n          <Row>\n            <Col md={8}>\n              <ListGroup variant=\"flush\">\n                <ListGroup.Item>\n                  <h2>Shipping</h2>\n                  <p>\n                    <strong>Name: </strong>\n                    {order.user.name}\n                  </p>\n                  <p>\n                    <strong>Email: </strong>\n                    <a href={`mailto:${order.user.email}`}>\n                      {order.user.email}\n                    </a>\n                  </p>\n                  <p>\n                    <strong>Address:</strong>\n                    {order.shippingAddress.address},{order.shippingAddress.city}\n                    ,{order.shippingAddress.postalCode},\n                    {order.shippingAddress.country}\n                  </p>\n                  {order.isDelivered ? (\n                    <Message variant=\"success\">\n                      Delivered on {order.DeliveredAt}\n                    </Message>\n                  ) : (\n                    <Message variant=\"danger\">Not Delivered</Message>\n                  )}\n                </ListGroup.Item>\n\n                <ListGroup.Item>\n                  <h2>Payment Method</h2>\n                  <p>\n                    <p>Method: {order.paymentMethod}</p>\n                  </p>\n                  {order.isPaid ? (\n                    <Message variant=\"success\">Paid on {order.paidAt}</Message>\n                  ) : (\n                    <Message variant=\"danger\">Not Paid</Message>\n                  )}\n                </ListGroup.Item>\n\n                <ListGroup.Item>\n                  <h2>Order Items</h2>\n                  {order.orderItems.length === 0 ? (\n                    <Message>Order is empty</Message>\n                  ) : (\n                    order.orderItems.map((item, index) => (\n                      <ListGroup.Item key={index}>\n                        <Row>\n                          <Col sm={2}>\n                            <Image\n                              src={item.image}\n                              alt={item.name}\n                              fluid\n                              rounded\n                            />\n                          </Col>\n                          <Col>\n                            <Link to={`/product/${item.product}`}>\n                              {item.name}\n                            </Link>\n                          </Col>\n                          <Col sm={4}>\n                            {item.qty}x${item.price} = ${item.qty * item.price}\n                          </Col>\n                        </Row>\n                      </ListGroup.Item>\n                    ))\n                  )}\n                </ListGroup.Item>\n              </ListGroup>\n            </Col>\n            <Col md={4}>\n              <Card>\n                <ListGroup variant=\"flush\">\n                  <ListGroup.Item>\n                    <h2>Order Summary</h2>\n                  </ListGroup.Item>\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Items</Col>\n                      <Col>${order.itemsPrice}</Col>\n                    </Row>\n                  </ListGroup.Item>\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Shipping</Col>\n                      <Col>${order.shippingPrice}</Col>\n                    </Row>\n                  </ListGroup.Item>\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Tax</Col>\n                      <Col>${order.taxPrice}</Col>\n                    </Row>\n                  </ListGroup.Item>\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Total</Col>\n                      <Col>${order.totalPrice}</Col>\n                    </Row>\n                  </ListGroup.Item>\n                  <ListGroup.Item>\n                    {!order.isPaid && (\n                      <ListGroup.Item>\n                        {loadingPay && <Loader />}\n                        {!sdkReady ? (\n                          <Loader />\n                        ) : (\n                          <PayPalButton\n                            amount={order.totalPrice}\n                            onSuccess={successPaymentHandler}\n                          />\n                        )}\n                      </ListGroup.Item>\n                    )}\n                  </ListGroup.Item>\n                </ListGroup>\n              </Card>\n            </Col>\n          </Row>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default OrderScreen;\n"]},"metadata":{},"sourceType":"module"}